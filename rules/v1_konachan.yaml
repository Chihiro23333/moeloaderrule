display: &DISPLAY
  columnCount: 5
  aspectRatio: 1.65

options: &OPTIONS
  - id: "rating"
    desc: "评级"
    items:
      - { desc: "safe", param: "rating%3Asafe+" }
      - { desc: "all", param: "" }
      - { desc: "questionable", param: "rating%3Aquestionable+" }
      - { desc: "explicit", param: "rating%3Aexplicit+" }
  - id: "pageCount"
    desc: "每页数量"
    items:
      - { desc: "20", param: "" }
      - { desc: "50", param: "&limit=50" }
      - { desc: "80", param: "&limit=80" }

config:
  meta:
    name: "konachan.com"

homePage:
  config: &HOMEPAGE_CONFIG
    options:
      *OPTIONS
    display:
      *DISPLAY
  chain:
    - onParseResult:
        contentType: "request"
        link: "https://konachan.com/post?${pageCount}page=${page}&tags=${rating}"
    - onParseResult: &HOMEPAGE_ONPARSERESULT
        list:
          getElements: { cssSelector: "#post-list-posts li" }
          foreach:
            coverUrl:
              get: { cssSelector: "a[class=thumb] img", attr: "src" }
            href:
              get: { cssSelector: "a[class=thumb]", attr: "href" }
              format:
                - concat: { start: "https://konachan.com", end: "" }
            tagStr:
              get: { cssSelector: "a[class=thumb] img", attr: "alt" }
              find:
                - regex: { regex: "(?<=Tags:).*?(?=User:)", index: 0 }
            tagSplit:
              get: { default: " " }
            width:
              get: { cssSelector: "span[class=directlink-info]", text: "" }
              find:
                - regex: { regex: '^\d+', index: 0 }
            height:
              get: { cssSelector: "span[class=directlink-info]", text: "" }
              find:
                - regex: { regex: '^\d+ x (\d+)', index: 1 }
            id:
              get: { cssSelector: "", attr: "id" }
              format:
                - replaceAll: { from: "p", to: "" }

searchPage:
  config:
    *HOMEPAGE_CONFIG
  chain:
    - onParseResult:
        contentType: "request"
        link: "https://konachan.com/post?${pageCount}page=${page}&tags=${rating}${keyword}"
        keywordConnector: "_"
    - onParseResult:
        *HOMEPAGE_ONPARSERESULT

detailPage:
  chain:
    - onParseResult:
        object:
          url:
            get: { cssSelector: "#image", attr: "src" }
          bigUrl:
            get: { cssSelector: "#highres", attr: "href" }
          rawUrl:
            get: { cssSelector: "#png", attr: "href" }
          tagStr:
            get: { cssSelector: "#image", attr: "alt" }
          tagSplit:
            get: { default: " " }
          width:
            get: { cssSelector: "a[class=thumb] img", attr: "width" }
          height:
            get: { cssSelector: "a[class=thumb] img", attr: "height" }
          id:
            get: { cssSelector: "#stats", text: "" }
            find:
              - regex: { regex: "(?<=Id:).*?(?=Posted:)", index: 0 }
          author:
            get: { cssSelector: "#stats", text: "" }
            find:
              - regex: { regex: "(?<=by ).*?(?=Size:)", index: 0 }
          dimensions:
            get: { cssSelector: "#stats", text: "" }
            find:
              - regex: { regex: "(?<=Size: ).*?(?= )", index: 0 }
          source:
            get: { cssSelector: "[rel^='canonical']", attr: "href" }