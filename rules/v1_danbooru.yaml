options: &OPTIONS
  - id: "rating"
    desc: "评级"
    items:
      - { desc: "safe", param: "rating%3Asafe+" }
      - { desc: "all", param: "" }
      - { desc: "questionable", param: "rating%3Aquestionable+" }
      - { desc: "explicit", param: "rating%3Aexplicit+" }
  - id: "pageCount"
    desc: "每页数量"
    items:
      - { desc: "20", param: "" }
      - { desc: "50", param: "&limit=50" }
      - { desc: "80", param: "&limit=80" }

display: &DISPLAY
  columnCount: 7
  aspectRatio: 1.65

config:
  meta:
    name: "danbooru.donmai.us"
  headers:
    user-agent: "Dart/3.2 (dart:io)"

onValidateResult: &onValidateResult
  - exception: { code: "403",  action: "challenge" }

homePage:
  config: &HOMEPAGE_CONFIG
    options:
      *OPTIONS
    display:
      *DISPLAY
  chain:
    - onParseResult:
        contentType: "request"
        link: "https://danbooru.donmai.us/posts?page=${page}&tags=${rating}${pageCount}"
    - onValidateResult:
        *onValidateResult
      onParseResult: &HOMEPAGE_ONPARSERESULT
        list:
          getElements: { cssSelector: "div[class='posts-container gap-2'] article" }
          foreach:
            coverUrl:
              get: { cssSelector: "a img", attr: "src" }
            href:
              get: { cssSelector: "a", attr: "href" }
              format:
                - concat: { start: "https://danbooru.donmai.us", end: "" }
            width:
              get: { cssSelector: "a img", attr: "width" }
            height:
              get: { cssSelector: "a img", attr: "height" }
            tagStr:
              get: { cssSelector: "", attr: "data-tags" }
            tagSplit:
              get: { default: " " }
            id:
              get: { cssSelector: "", attr: "id" }
              format:
                - replaceAll: { from: "ost_", to: "" }

searchPage:
  config:
    *HOMEPAGE_CONFIG
  chain:
    - onParseResult:
        link: "https://danbooru.donmai.us/posts?page=${page}&tags=${rating}${keyword}${pageCount}"
        keywordConnector: "_"
    - onValidateResult:
        *onValidateResult
      onParseResult:
        *HOMEPAGE_ONPARSERESULT

detailPage:
  chain:
  - onValidateResult:
      *onValidateResult
    onParseResult:
      object:
        url:
          get: { cssSelector: "#image", attr: "src" }
        rawUrl:
          get: { cssSelector: "#post-option-view-large a", attr: "href" }
        tagStr:
          get: { cssSelector: "section[class^=image-container]", attr: "data-tags" }
        tagSplit:
          get: { default: " " }
        id:
          get: { cssSelector: "#post-info-id", text: "" }
          format:
            - replaceAll: { from: "ID: ", to: "" }
        author:
          get: { cssSelector: "#post-info-uploader a", text: "" }
        dimensions:
          get: { cssSelector: "#post-info-size", text: "" }
        source:
          get: { cssSelector: "#post-info-source a", text: "" }